name: Build and Test Workflow
on:
  push:
    branches:
      - staging 
      - master
      - rc 
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      PERFORM_RELEASE:
        description: '[Release] perform release'
        required: false
        default: 'false'
  

jobs:
  check-permission:
    runs-on: ubuntu-latest
    steps:
      # this action will fail the whole workflow if permission check fails
      - name: check permission
        uses: zowe-actions/shared-actions/permission-check@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-test:
    runs-on: ubuntu-latest
    needs: check-permission
    steps: 
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2
        with: 
            submodules: true

      - name: '[Prep 2] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}
          
      - name: 'convert manifest'
        run: |
          COMMIT_HASH=$(git rev-parse --verify HEAD)
          CURRENT_TIME=$(date +%s%3N)
          ZSS_VERSION=$(cat version.txt)
          if [ -z ${{ github.event.pull_request.number }} ]
          then
            CURRENT_BRANCH=${GITHUB_REF#refs/heads/} 
          else
            CURRENT_BRANCH=PR-${{ github.event.pull_request.number }}
          fi
          sed -e "s|{{build\.branch}}|${CURRENT_BRANCH}|g" \
              -e "s|{{build\.number}}|${{ github.run_number }}|g" \
              -e "s|{{build\.commitHash}}|${COMMIT_HASH}|g" \
              -e "s|{{build\.timestamp}}|${CURRENT_TIME}|g" \
              -e "s|{{build\.version}}|${ZSS_VERSION}|g" \
              manifest.template.yaml > manifest.yaml
          
          echo "Current manifest.yaml is:"
          cat manifest.yaml
      
      - name: '[Prep 3] Prepare workflow'
        uses: zowe-actions/shared-actions/prepare-workflow@main

      - name: '[Packaging] Make pax'
        uses: zowe-actions/shared-actions/make-pax@main
        with:
          pax-name: 'zss'
          pax-options: '-x os390 -pp'
          pax-ssh-username: ${{ secrets.SSH_MARIST_USERNAME }}
          pax-ssh-password: ${{ secrets.SSH_MARIST_RACF_PASSWORD }}

      - name: '[Publish] Publish'
        uses: zowe-actions/shared-actions/publish@main
        if: success()
        with:
          artifacts: |
            .pax/zss.pax
          perform-release: ${{ github.event.inputs.PERFORM_RELEASE }}
 